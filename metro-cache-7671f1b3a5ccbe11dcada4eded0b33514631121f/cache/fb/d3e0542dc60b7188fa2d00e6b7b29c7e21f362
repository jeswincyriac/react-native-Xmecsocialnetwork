__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/media/jeswin/Lectures and Files/web devl/xmec/frontend/SocialNetworkApp/node_modules/react-native-material-bottom-navigation/lib/Badge.js";

  var _reactNative = require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Badge: {
      displayName: "Badge"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/media/jeswin/Lectures and Files/web devl/xmec/frontend/SocialNetworkApp/node_modules/react-native-material-bottom-navigation/lib/Badge.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var defaultProps = {
    size: 20,
    isVisible: true,
    style: {}
  };

  var Badge = _wrapComponent("Badge")((_temp = _class = function (_Component) {
    _inherits(Badge, _Component);

    function Badge() {
      _classCallCheck(this, Badge);

      return _possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).apply(this, arguments));
    }

    _createClass(Badge, [{
      key: "createStyles",
      value: function createStyles() {
        var _props = this.props,
            size = _props.size,
            style = _props.style;

        var container = _extends({}, {
          position: 'absolute',
          width: size,
          height: size,
          borderRadius: size / 2,
          alignItems: 'center',
          justifyContent: 'center',
          backgroundColor: '#F50057',
          zIndex: 9999,
          top: 3,
          left: '50%',
          marginLeft: 15
        }, style.container);

        var text = _extends({}, {
          color: '#fff',
          fontWeight: '500',
          fontSize: 12
        }, style.text);

        return _reactNative.StyleSheet.create({
          container: container,
          text: text
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _props2 = this.props,
            children = _props2.children,
            text = _props2.text,
            isVisible = _props2.isVisible,
            translateY = _props2.translateY;
        var styles = this.createStyles();

        if (!isVisible) {
          return null;
        }

        return _react3.default.createElement(
          _reactNative.Animated.View,
          {
            style: [styles.container, {
              transform: [{
                translateY: translateY
              }]
            }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 73
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            {
              style: styles.text,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            text
          )
        );
      }
    }]);

    return Badge;
  }(_react2.Component), _class.defaultProps = defaultProps, _temp));

  exports.default = Badge;
});