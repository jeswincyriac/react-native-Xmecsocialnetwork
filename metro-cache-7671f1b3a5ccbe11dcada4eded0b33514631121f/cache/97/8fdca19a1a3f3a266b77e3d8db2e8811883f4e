__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/media/jeswin/Lectures and Files/web devl/xmec/frontend/SocialNetworkApp/node_modules/react-native-display/display.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _reactNativeAnimatable = require(_dependencyMap[3], "react-native-animatable");

  var Animatable = _interopRequireWildcard(_reactNativeAnimatable);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Display: {
      displayName: "Display"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/media/jeswin/Lectures and Files/web devl/xmec/frontend/SocialNetworkApp/node_modules/react-native-display/display.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var screen = _reactNative.Dimensions.get('window');

  var WIDTH = screen.width;
  var HEIGHT = screen.height;
  var DEFAULT_DURATION = 250;

  var Display = _wrapComponent("Display")(function (_Component) {
    _inherits(Display, _Component);

    function Display(props) {
      _classCallCheck(this, Display);

      var _this = _possibleConstructorReturn(this, (Display.__proto__ || Object.getPrototypeOf(Display)).call(this, props));

      _this.state = {
        enable: _this.props.enable
      };
      return _this;
    }

    _createClass(Display, [{
      key: "onEndAnimation",
      value: function onEndAnimation(endState) {
        if (endState.finished == true) this.setState({
          enable: false
        });
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return true;
      }
    }, {
      key: "componentWillUpdate",
      value: function componentWillUpdate(nextProps, nextState) {
        var _this2 = this;

        if (nextProps.enable != this.props.enable) {
          if (nextProps.enable == false) {
            var duration = nextProps.exitDuration || nextProps.defaultDuration || DEFAULT_DURATION;

            if (nextProps.exit != null) {
              this.refs.display[nextProps.exit](duration).then(function (endState) {
                return _this2.onEndAnimation(endState);
              });
            } else nextState.enable = false;
          } else nextState.enable = true;
        }
      }
    }, {
      key: "enableStyle",
      value: function enableStyle() {
        if (this.state.enable) return {};
        return {
          position: 'absolute',
          top: HEIGHT,
          left: WIDTH,
          height: 0,
          width: 0
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.state.enable == false && this.props.keepAlive != true) return null;
        return _react3.default.createElement(
          Animatable.View,
          {
            ref: "display",
            style: [this.props.style, this.enableStyle.bind(this)()],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          },
          this.props.children
        );
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevProps.enable != this.props.enable) if (this.props.enable == true) {
          this.refs.display.stopAnimation();
          var duration = this.props.enterDuration || this.props.defaultDuration || DEFAULT_DURATION;

          if (this.props.enter != null) {
            this.refs.display[this.props.enter](duration).then(function (endState) {});
          }
        }
      }
    }]);

    return Display;
  }(_react2.Component));

  exports.default = Display;
});